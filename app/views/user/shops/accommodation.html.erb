<div class="accommodation-background">
<div class="d-flex justify-content-center">
  <div class="bg-white mx-5">
      <h1>宿泊施設</h1>
  </div>
  <!--検索フォーム-->
  <input id="address" type="textbox" placeholder="住所検索">
  <input type="button" value="検索" onclick="codeAddress()">
  <!---->
</div>

<div class="d-flex bd-highlight ">

  <div class="p-2 flex-fill ">
    <!--マップ表示-->
    <div class="border">
      <div id='map'></div>
    </div>
    <span id="lat"></span>
  </div>

  <div class="container mt-3 overflow-auto  flex-fill bd-highlight"style="height:700px;">
    <% @shops.each.with_index do |shop, i| %>
      <div class="border rounded border-dark bg-white p-2 my-2 h4">

        <p class="mb-3"><a href=<%= shop.site_url%> target="_blank"><%= shop.name %></a></p>
        <% if user_signed_in? %>
          <% if current_user.already_revued?(shop) %>
          　<!--お気に入り-->
            <%= button_to shop_revues_path(shop), method: :delete, style: "border: none; background: transparent"  do %>
              <i class="fa-solid fa-star" style="color: #FFD43B;"></i>
          <% end %>
          <% else %>
            <!--お気に入り取り消し-->
            <%= button_to shop_revues_path(shop), method: :post, style: "border: none; background: transparent" do %>
              <i class="fa-regular fa-star"></i>
          <% end %>
        <% end %>
        <% end %>
          <p>郵便番号: <%= shop.postal_code %></p>
          <p>住所: <%= shop.address %></p>
          <p>電話番号: <%= shop.telephone_number %></p>
          <p class="mb-0">直線距離:<span id="shop-<%= i %>"></span>km</p>
      </div>
    <% end %>
  </div>
</div>
</div>


<style>
  #map {
    height: 700px;
    width: 1000px;
  }
</style>

<script>
let map

function initMap(){
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 14,
    center: {lat: 35.171075437602035, lng:136.88147969620726},

  });

  var marker = new google.maps.Marker({
    position: {lat: 35.171075437602035, lng:136.88147969620726},
    map: map,
    draggable: true,
    title: "初期位置"
  });

  //マーカーのドロップ（ドラッグ終了）時のイベント
  var marker_lat = 0;
  var marker_lng = 0;
  var markers = new Array();

  google.maps.event.addListener(marker, 'dragend', function(e) {
      //イベントの引数eの、プロパティ.latLngがmarkerの緯度経度。
       document.getElementById("lat").innerHTML = 'マーカーの緯度' + e.latLng.lat();
      // $('#lng').text('マーカーの経度' + e.latLng.lng());
      console.log('マーカーの緯度' + e.latLng.lat());
      console.log('マーカーの経度' + e.latLng.lng());
      marker_lat = e.latLng.lat();
      marker_lng = e.latLng.lng();
      console.log(markers);
      for( var i = 0; i < markers.length; i++ ){
        var result_distance = calc_distance({lat: marker_lat, lng: marker_lng},markers[i]);
        console.log(result_distance);
        document.getElementById("shop-"+i).innerHTML = result_distance;

      }

  });


// 現在地のピン
  marker.setOptions({
    icon: {
    　url: '/img/my_icon.png',
    　scaledSize: new google.maps.Size(40, 60)
    }
  });

  <% @shops.each do |shop| %>
    <% if shop.lat && shop.lon %>
    (function(){
      var contentString = "<%= shop.name %> 住所：<%= shop.address %>";
      markers.push({lat: <%= shop.lat %>, lng: <%= shop.lon %>});

      var marker = new google.maps.Marker({
          position:{lat: <%= shop.lat %>, lng: <%= shop.lon %>},
          icon: '/img/accommodation_icon.png',
          size: new google.maps.Size(71, 71),
          map: map,
          title: contentString

      });

      })();
    <% end %>
  <% end %>

// 初期位置でも距離を算出する
  marker_lat = 35.171075437602035;
      marker_lng = 136.88147969620726;
      for( var i = 0; i < markers.length; i++ ){
        var result_distance = calc_distance({lat: marker_lat, lng: marker_lng},markers[i]);
        document.getElementById("shop-"+i).innerHTML = result_distance;
      }

}

function haversine_distance(mk1, mk2) {
      var R = 6371.0710; // km表示
      var rlat1 = mk1.lat * (Math.PI/180);
       // Convert degrees to radians
      var rlat2 = mk2.lat * (Math.PI/180);
       // Convert degrees to radians
      var difflat = rlat2-rlat1; // Radian difference (latitudes)
      var difflon = (mk2.lng-mk1.lng)
                  * (Math.PI/180); // Radian difference (longitudes)

      var d = 2 * R
      * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)
      +Math.cos(rlat1)*Math.cos(rlat2)
      *Math.sin(difflon/2)*Math.sin(difflon/2)));
      return +parseFloat(d).toFixed(2);
  }

// km表示
function calc_distance(base, target){
  let km = 0;
  console.log(base.lat);
  console.log(base.lng);

  console.log(target.lat);
  console.log(target.lng);

  km = haversine_distance(base, target)

  return km;
}

var geocoder

//検索フォームのボタンが押された時に実行される
function codeAddress(){
  //検索フォームの入力内容を取得
  let inputAddress = document.getElementById('address').value;


// 住所検索
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    //該当する検索結果がヒットした時に、地図の中心を検索結果の緯度経度に更新する
    if (status == 'OK') {

      map.setCenter(results[0].geometry.location);
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      display.textContent = "検索結果：" + results[ 0 ].geometry.location
    } else {
      //検索結果が何もなかった場合に表示
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAOhgWbMy8MLeF0mPpDoTHzaCzf14btmt4&callback=initMap" async defer></script>
<!---->



